###################### Correlation plot Tutorial 
###################### https://www.youtube.com/@study_tech_official
###################### See this tutorial video on Youtube 

###################### If not installed in your syetem then (otherwish skip these two command) ######

install.packages("tidyverse")
install.packages("corrplot")
install.packages("RColorBrewer")
install.packages("Hmisc")
install.packages("PerformanceAnalytics")

#################### Load the packages / library
library(tidyverse)
library(corrplot)
library(RColorBrewer)

library("Hmisc")

library("PerformanceAnalytics")

#################### Load the data
library(tidyverse)
dataframe <- read.csv("data.csv" , row.names = 1)

View(dataframe)


############# Convert dataframe to vector 

vector1 = dataframe[['mpg']] 
print(vector1)

vector2 = dataframe[['disp']] 
print(vector2)


############# Make plot with mpg vs disp

plot(vector1, vector2, pch = 19, col = "black")


############# Check Intercept point

lm(vector1 ~ vector2)

############# Draw line

abline(lm(vector2 ~ vector1),col = "red", lwd = 3)


############# Pearson correlation

text(paste("Correlation:", cor(vector2, vector1), 2), x = 30, y = 300)

#######################
#######################  Calculate all correlation

correlated <-cor(dataframe)
View(correlated)
round(correlated, 2)

write.csv(correlated, "correlated.csv")

####################### Draw corelation plot
library(corrplot)
library(RColorBrewer)

corrplot(correlated, type="upper", order="hclust",
         col=brewer.pal(n=8, name="RdYlBu"))


###################################    Calculate correlation and significance levels
library("Hmisc")


############# The p-values corresponding to the significance levels of correlations
r_correlation <- rcorr(as.matrix(dataframe))
r_correlation


############# Extract the correlation coefficients

r_correlation$r

############# Extract p-values

r_correlation$P

p_value <- r_correlation$P

write.csv(p_value, "p_value.csv")

##################### Draw Correlation heatmap 

library(corrplot)

color <- colorRampPalette(c("red", "white", "green"))(20)

heatmap(x = correlated, col = color, symm = TRUE)

########## Make corelation chart

library(PerformanceAnalytics)

chart.Correlation(dataframe, histogram=TRUE, pch=19)

######### Export any dataframe into csv file(Can be opened by MS excel) 
#write.csv(dataframe_name, "csv_file_name.csv")


############## Done
############## Subscribe to my Study_Tech Youtube channel
############## https://www.youtube.com/@study_tech_official
##############
############## Please subscribe! because making this type of video needs effort and time. 

### Source of script
### https://www.sthda.com/english/wiki/correlation-matrix-a-quick-start-guide-to-analyze-format-and-visualize-a-correlation-matrix-using-r-software
### https://www.theanalysisfactor.com/linear-models-r-plotting-regression-lines/

